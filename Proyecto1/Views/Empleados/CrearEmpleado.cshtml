@model Empleado

@{

    ViewData["title"] = "Crear Empleado";
}

<section class="formulario">

    <h1>@ViewData["title"]</h1>

    <div class="form-container">

        <form id="formEmpleado" asp-action="CrearEmpleado" asp-controller="EmpleadosApi">
            <label for="Cedula">Cédula:</label>
            <input type="number" id="Cedula" name="Cedula" required />
            <p style="color:red; display:None" id="error_span">hola como estamos</p>
            <label for="FechaNacimiento">Fecha de nacimiento:</label>
            <input type="date" id="FechaNacimiento" name="FechaNacimiento" required />

            <label for="FechaIngreso">Fecha de ingreso:</label>
            <input type="date" id="FechaIngreso" name="FechaIngreso" required />

            <label for="SalarioPorDia">Salario por día:</label>
            <input type="number" id="SalarioPorDia" name="SalarioPorDia" step="0.01" required />

            <label for="DiasVacacionesAcumulados">Días de vacaciones acumulados:</label>
            <input type="number" id="DiasVacacionesAcumulados" name="DiasVacacionesAcumulados" required />

            <label for="FechaRetiro">Fecha de retiro (si aplica):</label>
            <input type="date" id="FechaRetiro" name="FechaRetiro" />

            <label for="MontoLiquidacion">Monto de liquidación:</label>
            <input type="number" id="MontoLiquidacion" name="MontoLiquidacion" step="0.01" required />

            <button type="submit" id="mainButton">Guardar</button>
        </form>
    </div>

</section>


<script>
  const form = document.getElementById("formEmpleado");
  const elements = form.elements;
  let input_cedula = document.getElementById("Cedula");
  let  status = true
  let error_span = document.getElementById("error_span");

  const checkType = (type, value) => {
    if (type === "number") return Number(value);
    return value;
  };

   
  form.addEventListener("submit", (e) => {
    e.preventDefault();
    let dict = {};


    for (let i = 0; i < elements.length; i++) {
      if (elements[i].tagName === "INPUT" && elements[i].type !== "hidden") {
        const currentTag = elements[i];
        const currentKey = currentTag.name;
        const currentValueType = currentTag.type;
        const currentValue = currentTag.value;

        dict[currentKey] = checkType(currentValueType, currentValue);
      }
    }

    console.log("Datos del formulario:", dict);
    if(status ==  true){
    fetch('/api/empleados', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(dict)
    })
    .then(res => {
      if (res.ok) {
        console.log('Empleado creado con éxito');
        window.location.href = '/Empleados/MostrarEmpleados';
      } else {
        return res.json().then(error => {
          console.error('Error desde el servidor:', error);
          alert(error.message || "Hubo un error al crear el empleado");
        });
      }
    })
    .catch(error => {
      console.error('Error de red:', error);
      alert('Error de red o del servidor');
    });


    }
  });
</script>